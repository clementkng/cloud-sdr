From 8388dd97549f1f3f7d117d00354bcb1488e8989f Mon Sep 17 00:00:00 2001
From: Isaac Leonard <ifleonar@us.ibm.com>
Date: Mon, 18 Jun 2018 14:39:55 -0700
Subject: [PATCH] now using gob

---
 edge/services/sdr/data_broker/main.go | 61 +++++++++++++++++++++++++++
 1 file changed, 61 insertions(+)

diff --git a/edge/services/sdr/data_broker/main.go b/edge/services/sdr/data_broker/main.go
index 543ac68..5631437 100644
--- a/edge/services/sdr/data_broker/main.go
+++ b/edge/services/sdr/data_broker/main.go
@@ -4,7 +4,13 @@ import (
 	"errors"
 	"fmt"
 	"io/ioutil"
+	"log"
+	"strings"
+	"time"
 
+	"github.com/Shopify/sarama"
+	"github.com/open-horizon/examples/cloud/sdr/sdr-data-ingest/example-go-clients/util"
+	"github.com/open-horizon/examples/edge/services/sdr/data_broker/audiolib"
 	rtlsdr "github.com/open-horizon/examples/edge/services/sdr/librtlsdr/rtlsdrclientlib"
 	tf "github.com/tensorflow/tensorflow/tensorflow/go"
 )
@@ -98,16 +104,58 @@ func newModel(path string) (m model, err error) {
 	return
 }
 
+type msghubConn struct {
+	Producer sarama.SyncProducer
+	Topic    string
+}
+
+func connect(topic string) (conn msghubConn, err error) {
+	conn.Topic = topic
+	apiKey := util.RequiredEnvVar("MSGHUB_API_KEY", "")
+	username := apiKey[:16]
+	password := apiKey[16:]
+	util.Verbose("username: %s, password: %s\n", username, password)
+	brokerStr := util.RequiredEnvVar("MSGHUB_BROKER_URL", "kafka01-prod02.messagehub.services.us-south.bluemix.net:9093,kafka02-prod02.messagehub.services.us-south.bluemix.net:9093,kafka03-prod02.messagehub.services.us-south.bluemix.net:9093,kafka04-prod02.messagehub.services.us-south.bluemix.net:9093,kafka05-prod02.messagehub.services.us-south.bluemix.net:9093")
+	brokers := strings.Split(brokerStr, ",")
+	config, err := util.NewConfig(username, password, apiKey)
+	if err != nil {
+		return
+	}
+	conn.Producer, err = sarama.NewSyncProducer(brokers, config)
+	if err != nil {
+		return
+	}
+	return
+}
+
+func (conn *msghubConn) publishAudio(audioMsg *audiolib.AudioMsg) (err error) {
+	msg := &sarama.ProducerMessage{Topic: conn.Topic, Key: nil, Value: audioMsg}
+	partition, offset, err := conn.Producer.SendMessage(msg)
+	if err != nil {
+		log.Printf("FAILED to send message: %s\n", err)
+	} else {
+		log.Printf("> message sent to partition %d at offset %d\n", partition, offset)
+	}
+	return
+}
+
 func main() {
 	//m, err := newModel("train/conv_model.pb")
 	m, err := newModel("train/random_model/random_model.pb")
 	if err != nil {
 		panic(err)
 	}
+	fmt.Println("model loaded")
+	conn, err := connect("sdr-audio")
+	if err != nil {
+		panic(err)
+	}
+	fmt.Println("connected to msghub")
 	stations, err := rtlsdr.GetCeilingSignals("localhost", -13)
 	if err != nil {
 		panic(err)
 	}
+	fmt.Println("found", len(stations), "stations")
 	for {
 		for _, station := range stations {
 			fmt.Println("starting freq", station)
@@ -119,6 +167,19 @@ func main() {
 			if err != nil {
 				panic(err)
 			}
+			if val > 0.5 {
+				msg := &audiolib.AudioMsg{
+					Audio:         audio,
+					Ts:            time.Now(),
+					Freq:          station,
+					ExpectedValue: val,
+					DevID:         "isaac_test_desktop",
+				}
+				err = conn.publishAudio(msg)
+				if err != nil {
+					fmt.Println(err)
+				}
+			}
 			fmt.Println(station, val)
 		}
 	}
-- 
2.24.3 (Apple Git-128)

